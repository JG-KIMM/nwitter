{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","seterror","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onclick","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","onCLick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","document","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"uNAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OCkDxBC,EAlEE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAAUC,EADd,EACcA,KAAMC,EADpB,EACoBA,MAEP,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAIdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAKLX,EALK,gCAOQZ,EAAYwB,+BAA+BhB,EAAOE,GAP1D,OAOLe,EAPK,+CAUQzB,EAAY0B,2BAA2BlB,EAAOE,GAVtD,QAULe,EAVK,eAYTE,QAAQC,IAAIH,GAZH,kDAcTV,EAAS,KAAMc,SAdN,0DAAH,sDAoBd,OACI,mCACI,uBAAMR,SAAUA,EAAhB,UACI,uBACIF,KAAK,QACLW,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRZ,MAAOZ,EACPQ,SAAUA,IAEd,uBACIG,KAAK,WACLW,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRZ,MAAOV,EACPM,SAAUA,IAEd,uBAAOc,KAAK,SAASV,MAAOR,EAAa,iBAAmB,WAC3DE,EACD,sBAAMmB,QAvBI,kBAAMpB,GAAc,SAACqB,GAAD,OAAWA,MAuBzC,SACKtB,EAAa,UAAY,yBC5B/BuB,EA9BF,WACT,IAAMC,EAAa,uCAAG,WAAOnB,GAAP,iBAAAK,EAAA,4DAKL,YAHAH,EACTF,EADAC,OAASC,MAITkB,EAAW,IAAItC,EAAiBE,KAAKqC,mBACtB,WAATnB,IACNkB,EAAW,IAAItC,EAAiBE,KAAKsC,oBARvB,SAUCvC,EAAYwC,gBAAgBH,GAV7B,yDAAH,sDAanB,OACI,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQI,QAASL,EAAejB,KAAK,SAArC,kCAGA,wBAAQsB,QAASL,EAAejB,KAAK,SAArC,yC,QCkCDuB,EAxDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvB,EAA8BrC,oBAAS,GAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KACA,EAAgCvC,mBAASoC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAA5B,EAAA,0DACP6B,OAAOC,QAAQ,qDADR,gCAGRlD,EAAUmD,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,UAIiB,KAA3BZ,EAASa,cAJC,gCAKJpD,EAAeqD,WAAWd,EAASa,eAAeD,SAL9C,2CAAH,qDASbG,EAAgB,kBAAMZ,GAAW,SAACZ,GAAD,OAAWA,MAS5Cb,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPrB,EAAUmD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAAEZ,KAAMC,IAF/C,OAGbF,GAAW,GAHE,2CAAH,sDAMd,OACI,8BACKD,EACG,qCACI,uBAAMxB,SAAUA,EAAhB,UACI,uBAAOL,SAlBV,SAACC,GACd,IACaG,EACXH,EADEC,OAASE,MAEb6B,EAAY7B,IAc+BA,MAAO4B,EAAUhB,UAAQ,IACpD,uBAAOF,KAAK,SAASV,MAAM,oBAE/B,wBAAQwC,QAASF,EAAjB,uBAGR,qCACI,6BAAKf,EAASI,OACbJ,EAASa,eACN,qBAAKK,IAAKlB,EAASa,cAAeM,MAAM,OAAOC,OAAO,SAEzDnB,GACG,qCACI,wBAAQX,QAASiB,EAAjB,0BACA,wBAAQjB,QAASyB,EAAjB,iC,QC0BTM,EAxEM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAA0B1D,mBAAS,IAAnC,mBAAO2D,EAAP,KAAcC,EAAd,KACA,EAAoC5D,mBAAS,IAA7C,mBAAO6D,EAAP,KAAmBC,EAAnB,KAEMhD,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAMM,iBACFiC,EAAgB,GACF,IAAdY,EAHS,wBAIHE,EAAgBlE,EACjBmE,MACAC,MAFiB,UAERP,EAAQQ,IAFA,YAEOC,MANpB,SAOcJ,EAAcK,UAAUP,EAAY,YAPlD,cAOHQ,EAPG,gBAQaA,EAASL,IAAIM,iBAR1B,OAQTrB,EARS,gCAWPtD,EAAU4E,WAAW,UAAUC,IAAI,CACrChC,KAAOmB,EACPc,UAAYC,KAAKC,MACjBC,UAAYlB,EAAQQ,IACpBjB,kBAfS,QAiBbW,EAAS,IACTE,EAAc,IAlBD,4CAAH,sDA8Cd,OACI,uBAAMhD,SAAUA,EAAhB,UACQ,uBACID,MAAO8C,EACPlD,SA7BC,SAACC,GACdA,EAAMM,iBACN,IACaH,EACXH,EADEC,OAASE,MAEb+C,EAAS/C,IAyBGU,KAAK,OACLC,YAAY,uBACZqD,UAAW,MAEf,uBAAOtD,KAAK,OAAOuD,OAAO,UAAUrE,SA1B3B,SAACC,GAClB,IAGMqE,EADFrE,EADAC,OAAUqE,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IACqBC,EACjBD,EADAE,cAAiBD,OAErBvB,EAAcuB,IAElBJ,EAAOM,cAAcR,MAeb,uBAAOxD,KAAK,SAASV,MAAM,UAC1BgD,GACG,gCACI,qBAAKP,IAAKO,EAAYN,MAAM,QAAQC,OAAO,UAC3C,wBAAQ9B,QAhBF,kBAAMoC,EAAc,KAgB1B,0BClCT0B,EA7BF,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAEZ,EAA4B1D,mBAAS,IAArC,mBAAOyF,EAAP,KAAeC,EAAf,KAYA,OAVAC,qBAAU,WACNhG,EAAU4E,WAAW,UAAUqB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjClD,GAAIkD,EAASlD,IACVkD,EAAS/E,WAEhBwE,EAAUI,QAEf,IAGC,qCACI,cAAC,EAAD,CAAcpC,QAASA,IACvB,8BACK+B,EAAOO,KAAI,SAACrC,GAAD,OACR,cAAC,EAAD,CAEIvB,SAAUuB,EACVtB,QAASsB,EAAMiB,YAAclB,EAAQQ,KAFhCP,EAAMZ,aCrBpB,cAA+B,IAA5BW,EAA2B,EAA3BA,QAASwC,EAAkB,EAAlBA,YACnBC,EAAUC,cAChB,EAA4CpG,mBAAS0D,EAAQ2C,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAaMC,EAAW,uCAAG,4BAAAzF,EAAA,sEACGpB,EAClB4E,WAAW,UACXkC,MAAM,YAAa,KAAM/C,EAAQQ,KACjCwC,QAAQ,aACRC,MALe,OACZlB,EADY,OAMlBrE,QAAQC,IAAIoE,EAAOM,KAAKC,KAAI,SAAClD,GAAD,OAASA,EAAI5B,WANvB,2CAAH,qDASjByE,qBAAU,WACRa,MACC,IAEH,IAAM1F,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACF0C,EAAQ2C,cAAgBC,EAFf,gCAGH5C,EAAQkD,cAAc,CAAEP,YAAaC,IAHlC,OAITJ,IAJS,2CAAH,sDAQd,OACE,qCACI,uBAAMpF,SAAUA,EAAhB,UACI,uBACIL,SAhCG,SAACC,GACd,IACcG,EACZH,EADEC,OAAUE,MAEd0F,EAAkB1F,IA6BRU,KAAK,OACLC,YAAY,eACZX,MAAO0F,IAEX,uBAAOhF,KAAK,SAASV,MAAM,sBAE/B,wBAAQa,QA5CQ,WACpBjC,EAAYoH,UACZV,EAAQW,KAAK,MA0CT,yBClCOC,EAfI,SAAC,GAAiB,IAAfrD,EAAc,EAAdA,QAClB,OACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMsD,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBtD,EAAQ2C,YAA7B,4BCsBLY,EAzBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYxD,EAA2B,EAA3BA,QAASwC,EAAkB,EAAlBA,YAEtC,OACI,eAAC,IAAD,WACKgB,GAAc,cAAC,EAAD,CAAYxD,QAAUA,IACrC,cAAC,IAAD,UACKwD,EACG,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM1D,QAASA,MAEnB,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAASnB,YAAaA,EAAaxC,QAASA,SAIpD,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCuBTE,MA3Cf,WACE,MAAwBtH,oBAAS,GAAjC,mBAAOuH,EAAP,KAAaC,EAAb,KACA,EAA8BxH,mBAAS,MAAvC,mBAAO0D,EAAP,KAAgB+D,EAAhB,KA0BA,OAxBA9B,qBAAU,WACRlG,EAAYiI,oBAAmB,SAACC,GAE5BF,IADCE,GACU,CACTzD,IAAKyD,EAAKzD,IACVmC,YAAasB,EAAKtB,YAClBO,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,MAKhDJ,GAAQ,QAET,IAYD,mCACCD,EACC,cAAC,EAAD,CACErB,YAbW,WACjB,IAAMyB,EAAOlI,EAAYoI,YACzBJ,EAAW,CACTvD,IAAKyD,EAAKzD,IACVmC,YAAasB,EAAKtB,YAClBO,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OASxCV,WAAYY,QAAQpE,GACpBA,QAASA,IAET,qBCpCRqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,W","file":"static/js/main.66467014.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, seterror] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                //create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            seterror(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\" \r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n                <span onClick={toggleAccount}>\r\n                    {newAccount ? \"Sign In\" : \"Create Account\"}\r\n                </span>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const{\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") { \r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onclick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onclick={onSocialClick} name=\"google\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        }=event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onCLick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ):(\r\n            <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && (\r\n                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                )}\r\n                {isOwner && (\r\n                    <>\r\n                        <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                        <button onClick={toggleEditing}>Edit Nweet</button>\r\n                    </>\r\n                )}\r\n            </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n\r\n        }\r\n        await dbService.collection(\"nweets\").add({\r\n            text : nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const{\r\n            target: {value},\r\n        }=event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const{\r\n            target: { files },  \r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const{\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n                <input\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n                <input type=\"submit\" value=\"Nweet\" />\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"300px\" height=\"300px\" />\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                    </div>\r\n                )}\r\n            </form>\r\n    );\r\n};\r\n    \r\n\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((document) =>({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n      const{\r\n          target: { value },\r\n      }=event;\r\n      setNewDisplayName(value);\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({ displayName: newDisplayName });\r\n          refreshUser();\r\n      }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display Name\"\r\n                value={setNewDisplayName}    \r\n            />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    ); \r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ( {isLoggedIn, userObj, refreshUser} ) => {\r\n    // const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={ userObj } />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </>\r\n                ): (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user)  {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\nconst refreshUser =() => {\n  const user = authService.currentUser;\n  setUserObj({\n    uid: user.uid,\n    displayName: user.displayName,\n    updateProfile: (args) => user.updateProfile(args),\n  });\n};\n\n  return (\n    <>\n    {init ? (\n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} />\n     ) : (\n        \"Initializing...\"\n     )}    \n    \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","seterror","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","onclick","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64aff1cc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, seterror] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                //create newAccount\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                //log in\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            seterror(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\"\r\n                    type=\"email\" \r\n                    placeholder=\"Email\" \r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\" \r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value={newAccount ? \"Create Account\" : \"Log In\"} \r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import { FontAwesomeIcon, fontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const{\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") { \r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"%04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30}}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onclick={onSocialClick} name=\"google\" className=\"authBtns\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onclick={onSocialClick} name=\"google\" className=\"authBtns\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newNweet}\r\n              required\r\n              placeholder=\"Edit your nweet\"\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setNweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n      const{\r\n          target: { value },\r\n      }=event;\r\n      setNewDisplayName(value);\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({ displayName: newDisplayName });\r\n          refreshUser();\r\n      }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                placeholder=\"Display Name\"\r\n                value={setNewDisplayName}    \r\n            />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04faAAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link \r\n                        to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}    \r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2px\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                                : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    ); \r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ( {isLoggedIn, userObj, refreshUser} ) => {\r\n    // const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={ userObj } />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"content\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </div>\r\n                ): (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user)  {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\nconst refreshUser =() => {\n  const user = authService.currentUser;\n  setUserObj({\n    uid: user.uid,\n    displayName: user.displayName,\n    updateProfile: (args) => user.updateProfile(args),\n  });\n};\n\n  return (\n    <>\n    {init ? (\n      <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj} />\n     ) : (\n        \"Initializing...\"\n     )}    \n    \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}